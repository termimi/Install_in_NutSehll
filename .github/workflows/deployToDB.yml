name: Deploy Script to DB

on:
  push:
    branches:
    - main
jobs:
  check-commit-message:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # Récupération du message de commit
      - name: Get Commit Message
        id: get_commit
        run: |
          echo "COMMIT_MESSAGE=$(git log -1 --pretty=%B)" >> $GITHUB_ENV

      # Exécution conditionnelle
      - name: Run Workflow if Commit Contains 'feat'
        if: contains(env.COMMIT_MESSAGE, 'feat')
        run: |
          echo "This commit contains 'feat'. Running the workflow..."
          echo "Running=true" >> $GITHUB_ENV
          
      - name: Install docker compose 
        if: ${{ env.RUNNING == 'true' }} 
        run: |
          cd localDB
          sudo curl -L "https://github.com/docker/compose/releases/download/v2.3.3/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose --version

      - name: Docker compose up
        run: |
          docker compose -f localDb/docker-compose.yml up -d

      - name: Time out to let the time for the containers to start
        run: |
         sleep 30
                     
      - name: Insert script to DB
        run: |
          docker exec db bash -c "chmod 644 /var/lib/mysql-files/install_in_nutshell.ps1"
          docker exec db bash -c "mysql -uroot -proot -e 'CREATE DATABASE Install_in_NutShell;'"
          docker exec db bash -c "mysql -uroot -proot -D Install_in_NutShell -e 'CREATE TABLE Script_file (nom VARCHAR(255), contenu BLOB);'"
          docker exec db bash -c "mysql -uroot -proot -D Install_in_NutShell -e \"INSERT INTO Script_file (nom, contenu) VALUES ('install_in_nutshell.ps1', LOAD_FILE('/var/lib/mysql-files/install_in_nutshell.ps1'));\""          
          
        
          

          
        
